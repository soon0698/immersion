<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://soon0698.github.io/immersion/feed.xml" rel="self" type="application/atom+xml" /><link href="https://soon0698.github.io/immersion/" rel="alternate" type="text/html" /><updated>2021-11-26T15:19:16-06:00</updated><id>https://soon0698.github.io/immersion/feed.xml</id><title type="html">Immersion</title><subtitle>Think hard. My blog about code and ideas.</subtitle><author><name>{&quot;email&quot;=&gt;&quot;soon0698@gmail.com&quot;}</name><email>soon0698@gmail.com</email></author><entry><title type="html">Review - Implicit Neural Representations</title><link href="https://soon0698.github.io/immersion/markdown/2021/08/15/Nerf.html" rel="alternate" type="text/html" title="Review - Implicit Neural Representations" /><published>2021-08-15T00:00:00-05:00</published><updated>2021-08-15T00:00:00-05:00</updated><id>https://soon0698.github.io/immersion/markdown/2021/08/15/Nerf</id><author><name>{&quot;email&quot;=&gt;&quot;soon0698@gmail.com&quot;}</name><email>soon0698@gmail.com</email></author><category term="markdown" /><summary type="html">Introduction What is implicit neural representations? 우리가 처리하는 대부분의 신호는 픽셀 단위의 이미지, 샘플링된 오디오 신호, 그리고 3차원 데이터라 하더라도 통상적으로 복셀(voxel), 포인트 클라우드(point cloud), 메쉬(mesh) 등으로 처리하는게 용이하듯이, 이산적인 신호 표현을 많이 다루게 된다. Implicit Neural Representations 연구에서는 이러한 이산적 신호 표현들을 연속적인 함수로 취급해 다루고자 한다. 그 방법 중 하나는 ‘신호를 mapping할 연속적인 도메인’을 입력으로 받으면, ‘도메인에 해당하는 signal의 값’을 출력하는 함수를 찾는 것이다. 간단히 예를 들어, 이미지를 다루고자 한다면 ‘좌표’를 입력받아서 ‘좌표에 해당하는 이미지의 RGB 값’을 출력하는 함수를 만드는 것이다. 얼핏 생각해보면 이러한 함수는 직접 수식을 일일히 도입하는 수치적 방식으론 풀어낼 수 없는 문제이지만, 뉴럴 네트워크의 강력한 근사능력을 활용하여 ‘그럴듯한’ implicit 함수를 만들어낼 수 있는 시기가 도래한 것이다.</summary></entry><entry><title type="html">Uniform additive noise는 무엇이고, 어떻게 동작하는가?</title><link href="https://soon0698.github.io/immersion/markdown/2021/07/14/Uniform.html" rel="alternate" type="text/html" title="Uniform additive noise는 무엇이고, 어떻게 동작하는가?" /><published>2021-07-14T00:00:00-05:00</published><updated>2021-07-14T00:00:00-05:00</updated><id>https://soon0698.github.io/immersion/markdown/2021/07/14/Uniform</id><author><name>{&quot;email&quot;=&gt;&quot;soon0698@gmail.com&quot;}</name><email>soon0698@gmail.com</email></author><category term="markdown" /><summary type="html">Introduction Data Compression에 관한 내용 Shanon 표현법 엔트로피 최소화 기존 코덱 방법 동작 코딩 (CABAC) 등 ‘zero gradient’</summary></entry><entry><title type="html">CS294-158-SP20 Deep Unsupervised Learning Spring 2020 - (1)</title><link href="https://soon0698.github.io/immersion/markdown/2021/02/19/CS294-1.html" rel="alternate" type="text/html" title="CS294-158-SP20 Deep Unsupervised Learning Spring 2020 - (1)" /><published>2021-02-19T00:00:00-06:00</published><updated>2021-02-19T00:00:00-06:00</updated><id>https://soon0698.github.io/immersion/markdown/2021/02/19/CS294-1</id><author><name>{&quot;email&quot;=&gt;&quot;soon0698@gmail.com&quot;}</name><email>soon0698@gmail.com</email></author><category term="markdown" /><summary type="html">본 포스팅은 버클리대학에서 진행된 Deep Unsupervised Learning 강의를 요약하고자 만들어진 포스팅이다. 강의에 대한 모든 자료와 영상은 웹사이트에 공개되어 있으며, 강의자인 Pieter Abbeel은 버클리 인공지능 연구 센터(BAIR)의 디렉터이기도 하다.</summary></entry></feed>